!function(){"use strict";class e{constructor(e,t){var s,r,i;s=this,i=()=>this._inputElements.every((e=>e.validity.valid)),(r=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var r=s.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(r="_checkFormValidity"))in s?Object.defineProperty(s,r,{value:i,enumerable:!0,configurable:!0,writable:!0}):s[r]=i,this._formSelector=e.inputSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector("#"+e.id+"-error");e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_toggleButtonState(){this._checkFormValidity()?(this._submitButton.disabled=!1,this._submitButton.classList.remove(this._inactiveButtonClass)):(this._submitButton.disabled=!0,this._submitButton.classList.add(this._inactiveButtonClass))}_hideInputError(e){const t=this._form.querySelector("#"+e.id+"-error");e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_setEventListeners(){this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._toggleButtonState()}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class t{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscUp=this._handleEscUp.bind(this)}_handleEscUp(e){"Escape"===e.key&&(document.querySelector(".modal_open"),this.close())}setEventListener(){document.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_open")||e.target.classList.contains("modal__close-button-image"))&&this.close()}))}open(){this._popupElement.classList.add("modal_open"),document.addEventListener("keydown",this._handleEscUp)}close(){this._popupElement.classList.remove("modal_open"),document.removeEventListener("keydown",this._handleEscUp)}}class s extends t{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._handleFormSubmit=s,this._popupForm=this._popupElement.querySelector(".modal__form")}_getInputValues(){const e=this._popupElement.querySelectorAll(".modal__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListener(){super.setEventListener(),this._popupForm.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues())}))}setLoading(e,t){const s=this._popupForm.querySelector(".modal__button");console.log(s),s.textContent=e?"Saving...":t}close(){this._popupForm.reset(),super.close()}}const r=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}getData(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}_sendRequest(e,t){return fetch(e,t).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getUserInfo(){return this._sendRequest(`${this._baseUrl}/users/me`,{headers:this._headers})}saveUserInfo(e){let{name:t,about:s}=e;return this._sendRequest(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})})}getInitialCards(){return this._sendRequest(`${this._baseUrl}/cards`,{headers:this._headers})}saveAddCard(e){let{name:t,link:s}=e;return this._sendRequest(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})})}removeCard(e){return this._sendRequest(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}addLike(e){return this._sendRequest(`${this._baseUrl}/cards/likes/${e}`,{method:"PUT",headers:this._headers})}removeLike(e){return this._sendRequest(`${this._baseUrl}/cards/likes/${e}`,{method:"DELETE",headers:this._headers})}updateProfileImage(e){let{link:t}=e;return this._sendRequest(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})})}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"7279c0be-4bdd-49b0-9b2c-1082aa2638f0","Content-Type":"application/json"}});let i=null;r.getData().then((e=>{let[t,s]=e;y.setUserInfo({name:t.name,about:t.about}),y.setUserAvatar({avatar:t.avatar}),i=t._id,q.renderItems(s)})).catch((e=>{console.log(e)}));const n=document.querySelector(".profile__button-edit"),o=document.querySelector("#modal-edit-form"),a=document.querySelector(".profile__button"),l=document.querySelector("#modal-card-form"),d=document.querySelector("#name"),c=document.querySelector("#about"),u=document.querySelector(".profile__image-button"),h=document.querySelector("#modal-avatar-form"),_=document.querySelector(".profile__image"),m={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error-visible"},p=new class extends t{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._title=this._popupElement.querySelector(".modal__image-description"),this._image=this._popupElement.querySelector(".modal__preview-image")}open(e,t){this._title.textContent=e,this._image.src=t,this._image.alt=e,super.open()}}({popupSelector:"#image-modal"}),v=new class extends t{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form")}setSubmitAction(e){this._handleFormSubmit=e}setEventListener(){super.setEventListener(),this._popupElement.querySelector(".modal__form").addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}setLoading(e,t){this._popupForm.querySelector(".modal__button").textContent=e?"Deleting...":t}}({popupSelector:"#modal-delete"}),S=e=>{const t=new class{constructor(e,t){let{cardData:s,handleImageClick:r,handleDeleteCard:i,handleLikeButton:n,userId:o}=e;this._name=s.name,this._link=s.link,this._alt=s.name,this._id=s._id,this._ownerId=s.owner._id,this._userId=o,this._likes=s.likes,this._handleImageClick=r,this._handleDeleteCard=i,this._handleLikeButton=n,this._cardSelector=t}getId(){return this._id}_setEventListeners(){this.element.querySelector(".card__title-button").addEventListener("click",(()=>this._handleLikeButton())),this.element.querySelector(".card__delete-button")?.addEventListener("click",(()=>this._handleDeleteCard(this._name,this._link))),this.element.querySelector(".card__image").addEventListener("click",(()=>this._handleImageClick(this._name,this._link)))}removeCard(){this.element.remove()}isLiked(){return this._likes.some((e=>e._id===this._userId))}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card__content").cloneNode(!0)}getView(){return this.element=this._getTemplate(),this.element.querySelector(".card__image").src=this._link,this.element.querySelector(".card__image").alt=this._alt,this.element.querySelector(".card__title").textContent=this._name,this._likeCounter=this.element.querySelector(".card__like-count"),this._renderLikes(),this._ownerId!==this._userId&&this.element.querySelector(".card__delete-button").remove(),this._setEventListeners(),this.element}_renderLikes(){this._likeCounter.textContent=this._likes.length||"",this.isLiked()?this.element.querySelector(".card__like-image").classList.add("card__like-image_active"):this.element.querySelector(".card__like-image").classList.remove("card__like-image_active")}setLikesInfo(e){this._likes=e,this._renderLikes()}}({cardData:e,userId:i,handleImageClick:(e,t)=>{p.open(e,t)},handleDeleteCard:()=>{v.open(),v.setSubmitAction((()=>{v.setLoading(!0),r.removeCard(t.getId()).then((e=>{t.removeCard(),v.close()})).catch((e=>{console.log(e)})).finally((()=>{v.setLoading(!1,"yes")}))}))},handleLikeButton:()=>{t.isLiked()?r.removeLike(t.getId()).then((e=>{t.setLikesInfo(e.likes)})).catch((e=>{console.log(e)})):r.addLike(t.getId()).then((e=>{t.setLikesInfo(e.likes)})).catch((e=>{console.log("Error adding like:",e)}))}},"#card-template");return t.getView()},g=new e(m,l),b=new e(m,o),E=new e(m,h);g.enableValidation(),b.enableValidation(),E.enableValidation();const y=new class{constructor(e){let{nameSelector:t,titleSelector:s,avatar:r}=e;this._nameElement=document.querySelector(t),this._descriptionElement=document.querySelector(s),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,about:this._descriptionElement.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._nameElement.textContent=t,this._descriptionElement.textContent=s}getUserAvatar(){return{avatar:this._avatar}}setUserAvatar(e){let{avatar:t}=e;this._avatar.src=t}}({nameSelector:".profile__title",titleSelector:".profile__title-description",avatar:".profile__image"}),L=new s({popupSelector:"#modal-add",handleFormSubmit:e=>{L.setLoading(!0),r.saveUserInfo({name:e.name,about:e.about}).then((()=>{y.setUserInfo({name:e.name,about:e.about}),L.close()})).catch((e=>{console.log(e)})).finally((()=>{L.setLoading(!1,"Save")}))}}),f=new s({popupSelector:"#modal-avatar-add",handleFormSubmit:e=>{f.setLoading(!0),r.updateProfileImage(e).then((e=>{y.setUserAvatar(e),f.close()})).catch((e=>{console.log(e)})).finally((()=>{f.setLoading(!1,"Save")}))}}),k=new s({popupSelector:"#modal-card-add",handleFormSubmit:function(e){k.setLoading(!0),r.saveAddCard(e).then((e=>{k.close(),q.addItem(S(e))})).catch((e=>{console.log(e)})).finally((()=>{k.setLoading(!1,"Create")}))}}),q=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}renderItems(e){e.reverse().forEach((e=>{this._renderer(e)}))}}({renderer:e=>{const t=S(e);q.addItem(t)}},".card");L.setEventListener(),p.setEventListener(),k.setEventListener(),v.setEventListener(),f.setEventListener();const C=()=>{E.resetValidation(),f.open()};n.addEventListener("click",(()=>{const{name:e,about:t}=y.getUserInfo();d.value=e,c.value=t,b.resetValidation(),L.open()})),a.addEventListener("click",(()=>{g.resetValidation(),k.open()})),u.addEventListener("click",C),_.addEventListener("click",C)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,